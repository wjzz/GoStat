1. Dokumentacja użytkownika
1.0. Wymagania (szacunkowa ilość miejsca na dysku, przeglądarka internetowa)
1.1. Sposob instalacji i konfiguracji
1.2. Screenshoty z opisem funcjonalności
1.3. Opis opcji dostepnych z poziomu terminala (interfejsu tekstowego)

2. Dokumentacja programisty
2.0. Organizacja projektu
2.0.0. Cykl życia aplikacji
2.0.1. Struktura modułów
2.0.2. Baza danych
2.0.3. Automatycznie generowana dokumentacja (API)
2.1. Kompilacja i testowanie projektu - konkretne polecenia
2.2. Omowienie modulow
2.2.1. Data.SGF
2.2.2. Transformations (opis funkcji i niezmiennikow)
2.3. Lista użytych narzędzi i bibliotek wraz z omowieniem i przykladami
2.3.1. Cabal
2.3.2. Happstack
2.3.3. HUnit, QuickCheck, test-framework
2.3.4. postresql, HDBC
2.3.5. Parsec 2
2.3.6. xhtml 3000
2.3.7. inne (filemanip, strict, mtl)
-- po uzyciu:
2.3.8. gtk2hs
2.3.9. Haddock

3. Motywacja dla projektu
3.1. Krótkie wprowadzenie do go
3.2. Cel projektu: zadanie Fajfiego
3.3. Dlaczego Haskell?

4. Podrecznik: "Programowanie w Haskellu: aspekty praktyczne"
4.0. Omawiane narzedzia (GHC7, Haskell Platform, cabal, emacs)
4.0.1. Przydatne odnośniki i literatura
4.0.2. Bibliografia
4.1. Organizacja modularna i male problemy z nia zwiazane
4.1.1. Jakie opcje podac ghc aby skompilować modularny program w Haskellu?
4.1.2. pliki .ghci
4.2. Kompilacja za pomocą cabal, dlaczego warto?
4.3. Pakiety, Hackage i cabal
4.4. cabal-dev
4.5. Profilowanie
4.6. Dokumentacja

Wykaz powtarzalnych testow
- dodac wiecej rzeczy do make test

ZPL:

7. Dokumentacja składa się z trzech zasadniczych czę ci:

   a) wprowadzenia (wyja nienie motywów powstania oprogramowania,
   nakre lenie szerszego tła, streszczenie reszty pracy, wskazówki
   dotyczšce użytkowania dokumentacji itp.);

   b) opisu technicznego oprogramowania (dla inżynierów oprogramowania);

   c) instrukcji obsługi oprogramowania (podręcznik użytkownika).
8. Dokumentacja zawiera tyle dodatków, ile ich będzie koniecznych.
 W szczególno ci dodatkiem obowišzkowym jest słownik terminów
 dotyczšcych oprogramowanego zagadnienia. Drugim obowišzkowym
 dodatkiem jest _standardowo zredagowany_ kod  ródłowy oprogramowania
 (oddawany tylko na no niku komputerowym, chyba że jest niewielki).
 Poza tym porzšdna dokumentacja zawiera skorowidz i wszelkie
 udogodnienia ułatwiajšce w niej orientację.

 9. Dokumentacja jest napisana _w języku polskim_. W wypadku opracowania
 dokumentacji (w cało ci) w języku angielskim (lub innym) dokumentacja
 zawiera wyczerpujšce streszczenie w języku polskim.

 10. Dokumentacja jest _bezbłędna, estetyczna, poprawnie zredagowana
 merytorycznie i technicznie, z przestrzeganiem reguł składu_
 (por. dobre podręczniki akademickie, dokumenty RFC w Sieci itp.).

 11. Wymagania dotyczšce jako ci, podane w p. 10, odnoszš się --
 w odpowiedni sposób -- do kodu programu i jego działania; w szczególno ci
 do interfejsu użytkownika programu, w którym błędy językowe,
 makaronizmy itp. mogš być podstawš nieprzyjęcia pracy.
